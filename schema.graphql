type CreationEnabledSet @entity(immutable: true) {
  id: Bytes!
  isEnabled: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemCrafted @entity(immutable: true) {
  id: Bytes!
  crafter: Bytes! # address
  itemId: BigInt! # uint256
  amount: BigInt! # uint256
  tokenId: BigInt! # uint256
  actualComponents: [Bytes!]! # tuple[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemCreated @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  itemId: BigInt! # uint256
  name: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemDestroyed @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  itemId: BigInt! # uint256
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemFrozen @entity(immutable: true) {
  id: Bytes!
  itemId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemUpdated @entity(immutable: true) {
  id: Bytes!
  itemId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemUsed @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  itemId: BigInt! # uint256
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemsApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  itemIds: [BigInt!]! # uint256[]
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OtomItemsSet @entity(immutable: true) {
  id: Bytes!
  otomItems: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RendererSet @entity(immutable: true) {
  id: Bytes!
  renderer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  tokenIds: [BigInt!]! # uint256[]
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TraitsUpdated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  traits: [Bytes!]! # tuple[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ValidatorSet @entity(immutable: true) {
  id: Bytes!
  validator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemCraftCounter @entity(immutable: false) {
  id: String! # itemId as a string
  itemId: BigInt! # The item ID
  count: BigInt! # Number of times this item was crafted
  lastUpdated: BigInt! # Last time this counter was updated
}
